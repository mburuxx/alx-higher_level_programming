The ``say_my_name`` module
==========================

The ``say_my_name`` function
----------------------------
First import the module tha contains the function
>>> say_my_name = __import__('3-say_my_name').say_my_name

SUCCESS CASES:
=============
	If all the names are strings
	----------------------------
	>>> say_my_name("John", "Smith")
	My name is John Smith

	>>> say_my_name("Walter", "White")
	My name is Walter White

	>>> say_my_name("Walter", "W Last")
	My name is Walter W Last


	If only one name is given
	-------------------------
	>>> say_my_name("Bob")
	My name is Bob

	If one name is a digit but in the form of a string
	--------------------------------------------------
	>>> say_my_name("Walter", "2")
	My name is Walter 2


FAIL CASES
==========
	If the last name is an integer
	---------------------------------
	>>> say_my_name("Walter", 2)
	Traceback (most recent call last):
	  ...
	TypeError: last_name must be a string

	If the last name is of type float
	-----------------------------------
	>>> say_my_name("Walter", 2.4)
	Traceback (most recent call last):
	  ...
	TypeError: last_name must be a string

	If the first name is an integer
	-------------------------------
	>>> say_my_name(1, "White")
	Traceback (most recent call last):
	  ...
	TypeError: first_name must be a string

	If an integer is the only thing provided
	----------------------------------------
	>>> say_my_name(1)
	Traceback (most recent call last):
	  ...
	TypeError: first_name must be a string

	If 2 integers are passed
	------------------------
	>>> say_my_name(1, 3)
	Traceback (most recent call last):
	  ...
	TypeError: first_name must be a string


	If the last name is of type list
	--------------------------------
	>>> say_my_name("Walter", ["John", "Smith"])
	Traceback (most recent call last):
	  ...
	TypeError: last_name must be a string

	If the a list is passed in entirely.
	-----------------------------------
	>>> say_my_name(["John", "Smith"])
	Traceback (most recent call last):
	  ...
	TypeError: first_name must be a string

	If a list of integers is passed in
	----------------------------------
	>>> say_my_name([1, 3])
	Traceback (most recent call last):
	  ...
	TypeError: first_name must be a string
